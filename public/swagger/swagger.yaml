# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: 三国强手棋 API
  description: |
    所有HEAD请求都是websocket的客户端on,服务端emit。
    所有PUT请求都是websocket的客户端emit,服务端on
  version: "1.0.0"
# the domain of the service
host: localhost:18080
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /
produces:
  - application/json
paths:
  /user/login:
    post:
      summary: 登入
      description: |
      parameters: 
        - name: body
          in: body
          description: 昵称和头像的json
          required: true
          type: string
          schema:
            $ref: '#/definitions/LoginParam'
      tags:
        - User
      responses:
        200:
          description: |
            成功直接返回用户对象
          schema:
            $ref: '#/definitions/UserInfo'
            
  /user/changeUserInfo:
    post:
      summary: 修改用户信息
      description: |
      parameters:
        - name: body
          in: body
          description: 旧昵称,新昵称和头像的json
          required: true
          type: string
          schema:
            $ref: '#/definitions/ChangeUserParam'
      tags:
        - User
      responses:
        200:
          description: |
            成功直接返回success
          schema:
            type: string
        400:
          description: |
            此昵称已被人使用
          schema:
            type: string
  /user/show:
    get:
      summary: 返回所有人
      tags:
        - User
      responses:
        200:
          description: |
            成功直接返回所有人对象
          schema:
            $ref: '#/definitions/UserInfo'
  /base/mapInfo:
    get:
      summary: 基本的地图信息
      tags:
        - Base
      responses:
        200:
          description: n/a
  /base/heroInfo:
    get:
      summary: 基本的人物信息
      tags:
        - Base
      responses:
        200:
          description: n/a
  /room/enter/{roomNumber}:
    get:
      summary: 进入房间
      parameters:
        - name: roomNumber
          in: path
          description: |
            房间号，暂时只有1和2
          required: true
          type: int32
      tags:
        - Room
      responses:
        200:
          description: |
            成功进入房间
        201:
          description: |
            退出已进入的其他房间,再成功进入当前房间
        400:
          description: |
            房间号不正确
        401:
          description: |
            房间已满
  /room/quit/{roomNumber}:
    get:
      summary: 退出房间
      parameters:
        - name: roomNumber
          in: path
          description: |
            房间号，暂时只有1和2
          required: true
          type: int32
      tags:
        - Room
      responses:
        200:
          description: |
            succes
        400:
          description: |
            房间号不正确
  /room/show/{roomNumber}:
    get:
      summary: 显示一个房间的信息
      parameters:
        - name: roomNumber
          in: path
          description: |
            房间号，暂时只有1和2
          required: true
          type: int32
      tags:
        - Room
      responses:
        200:
          description: |
            一个房间信息
          schema:
            $ref: '#/definitions/RoomInfo'
  /room/show:
    get:
      summary: 显示所有房间的信息
      tags:
        - Room
      responses:
        200:
          description: |
            一个房间信息
          schema:
            $ref: '#/definitions/RoomInfoALL'
  /ping:
    get:
      summary: 心跳检测
      tags:
        - common
      responses:
        200:
          description: n/a
definitions:
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  LoginParam:
    type: object
    properties:
      nickname:
        type: string
        description: 昵称
      avatar:
        type: string
        description: 头像图片地址
  ChangeUserParam:
    type: object
    properties:
      oldNickname:
        type: string
        description: 旧昵称
      nickname:
        type: string
        description: 新昵称
      avatar:
        type: string
        description: 头像图片地址
  UserInfo:
    type: object
    properties:
      _userId:
        type: int32
        description: 用户ID
      _nickname:
        type: string
        description: 昵称
      _avatar:
        type: string
        description: 头像图片地址

  RoomInfo:
    type: object
    properties:
      _roomName:
        type: string
        description: 房间名
      _hostId:
        type: int32
        description: 房主ID
      _hostNickname:
        type: string
        description: 房主昵称
      _currentNum:
        type: int32
        description: 当前人数
      _maxNum:
        type: int32
        description: 最大人数
      _isGaming:
        type: boolean
        description: 是否正在游戏  
      _users:
        type: array
        items:
          $ref: '#/definitions/UserInfo' 
  RoomInfoALL:
    type: array    
    items:
      $ref: '#/definitions/RoomInfo' 
        
